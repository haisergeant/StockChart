//
//  StockListModels.swift
//  StockChart
//
//  Created by Le Thanh Hai on 6/24/17.
//  Copyright (c) 2017 haile. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit
import BonMot

fileprivate let PaddingInnerX = CGFloat(20)
fileprivate let PaddingInnerY = CGFloat(20)
fileprivate let PaddingBetweenX = CGFloat(20)
fileprivate let PaddingBetweenY = CGFloat(20)

fileprivate let GreenColor = UIColor(red: 106.0 / 255.0, green: 187.0 / 255.0, blue: 97.0 / 255.0, alpha: 1.0)
fileprivate let RedColor = UIColor(red: 185.0 / 255.0, green: 101.0 / 255.0, blue: 109.0 / 255.0, alpha: 1.0)

struct StockListRequest {
    var symbolList: [String]
}

struct StockListResponse {
    var stockList: [Stock]
}

class StockListViewModel {
    var modelList: [StockViewModel]
    
    init(modelList: [StockViewModel]) {
        self.modelList = modelList
    }
}

class StockViewModel {
    struct Style {
        let symbolStyle: StringStyle
        let priceStyle: StringStyle
        let changeStyle: StringStyle
        
        init(symbolStyle: StringStyle = StringStyle(.font(UIFont.boldSystemFont(ofSize: 14))),
             priceStyle: StringStyle = StringStyle(.font(UIFont.systemFont(ofSize: 13)),
                                                   .alignment(.right)),
             changeStyle: StringStyle = StringStyle(.font(UIFont.systemFont(ofSize: 13)),
                                                    .alignment(.right))) {
            self.symbolStyle = symbolStyle
            self.priceStyle = priceStyle
            self.changeStyle = changeStyle
        }
    }
    
    let stock: Stock
    var labelTitle: NSAttributedString
    var changeText: NSAttributedString?
    var priceText: NSAttributedString
    let padding: Padding
    let style: Style
    
    init(stock: Stock,
         padding: Padding = Padding(),
         style: Style = Style()) {
        self.stock = stock
        self.padding = padding
        self.style = style
        
        self.labelTitle = self.stock.symbol.styled(with: self.style.symbolStyle)
        
        if let number = Double(self.stock.valueChange) {
            var changeStyle = self.style.changeStyle
            if number > 0 {
                changeStyle = changeStyle.byAdding(.color(GreenColor))
            } else {
                changeStyle = changeStyle.byAdding(.color(RedColor))
            }
            self.changeText = self.stock.valueChange.styled(with: changeStyle)
        }
        
        self.priceText = String(self.stock.askPrice).styled(with: self.style.priceStyle)
    }
}

struct Padding {
    var paddingInnerX: CGFloat
    var paddingInnerY: CGFloat
    var paddingBetweenX: CGFloat
    var paddingBetweenY: CGFloat
    
    init(paddingInnerX: CGFloat = PaddingInnerX,
         paddingInnerY: CGFloat = PaddingInnerY,
         paddingBetweenX: CGFloat = PaddingBetweenX,
         paddingBetweenY: CGFloat = PaddingBetweenY) {
        self.paddingInnerX = paddingInnerX
        self.paddingInnerY = paddingInnerY
        self.paddingBetweenX = paddingBetweenX
        self.paddingBetweenY = paddingBetweenY
    }
}
